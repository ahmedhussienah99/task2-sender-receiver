#include "Rte_SeatManger.h"

			
#define MULTI_STATE_BTN_MINUS			
#define MULTI_STATE_BTN_PLUS			

			
#define MOTOR_STEP_MINUS			
#define MOTOR_STEP_PLUS
void SeatManger_SetHeight (void)
{
	Std_ReturnType status;
	MultiStateBtnType DE_HeightBtnState;

	/* Data Receive Points */
	status = Rte_Read_rpSeatCtrlBtn_DE_HeightBtnState(&DE_HeightBtnState);
	
	if(DE_HeightBtnState == MULTI_STATE_BTN_MINUS)
	{
		 Rte_Call_rpHeightMotor_Move(MOTOR_STEP_MINUS);
	}
	else if(DE_HeightBtnState == MULTI_STATE_BTN_PLUS)
	{
		 Rte_Call_rpHeightMotor_Move(MOTOR_STEP_PLUS);
	}
}
void SeatManger_SetIncline (void)
{
	Std_ReturnType status;
	MultiStateBtnType DE_InclinceBtnState;

	/* Data Receive Points */
	status = Rte_Read_rpSeatCtrlBtn_DE_InclinceBtnState(&DE_InclinceBtnState);
	
	if(DE_InclinceBtnState == MULTI_STATE_BTN_MINUS)
	{
		 Rte_Call_rpInclineMotor_Move(MOTOR_STEP_MINUS);
	}
	else if(DE_HeightBtnState == MULTI_STATE_BTN_PLUS)
	{
		 Rte_Call_rpInclineMotor_Move(MOTOR_STEP_PLUS);
	}
}
void SeatManger_SetSlide (void)
{
	Std_ReturnType status;
	MultiStateBtnType DE_SlideBtnState;

	/* Data Receive Points */
	status = Rte_Read_rpSeatCtrlBtn_DE_SlideBtnState(&DE_SlideBtnState);
	
	if(DE_SlideBtnState == MULTI_STATE_BTN_MINUS)
	{
		 Rte_Call_rpSlideMotor_Move(MOTOR_STEP_MINUS);
	}
	else if(DE_HeightBtnState == MULTI_STATE_BTN_PLUS)
	{
		 Rte_Call_rpSlideMotor_Move(MOTOR_STEP_PLUS);
	}
}
